{"version":3,"sources":["ContentCardConfig.ts","editor/Buttons.tsx","colors.ts","editor/Input.tsx","editor/Form.tsx","editor/Editor.tsx","preview/Template.tsx","preview/Preview.tsx","export/Field.tsx","export/Export.tsx","export/generate-code.tsx","App.tsx","index.tsx"],"names":["DashboxImage","DashboxLayouts","Background","CreatorGradient","CreatorBlue","CreatorGreen","ListenerGradient","ListenerPink","ListenerPurple","AdZones","stream","listen","notifications","tags","StyledButton","styled","div","_templateObject","Button","_templateObject2","props","selected","css","_templateObject3","StyledInput","input","Input_templateObject","StyledLabel","Input_templateObject2","Input","_ref","label","value","maxLength","onChange","react_default","a","createElement","Fragment","type","StyledInputContainer","Form_templateObject","setConfigProp","config","setConfig","prop","valueKey","event","Object","objectSpread","defineProperty","currentTarget","Form","editor_Input","title","description","ctaText","tcode","checked","control","ButtonContainer","Editor_templateObject","Editor_templateObject2","setLayout","layout","setBackground","background","setAdZones","zone","adZones","indexOf","filter","z","concat","toConsumableArray","Editor","Editor_StyledLabel","map","key","onClick","keys","editor_Form","DashboxWrapper","Template_templateObject","LinkWrapper","Template_templateObject2","ContentWrap","Template_templateObject3","TitleLine","h2","_templateObject4","BodyLine","p","_templateObject5","Cta","_templateObject6","CtaButton","_templateObject7","Side","_templateObject8","SideImage","img","_templateObject9","SideIcon","_templateObject10","Template","_ref$config","isImageLayout","imgSrc","href","style","className","src","alt","PreviewContainer","Preview_templateObject","Preview","dangerouslySetInnerHTML","__html","Template_Template","StyledContainer","Field_templateObject","StyledField","Field_templateObject2","StyledCopy","span","Field_templateObject3","copyToClipboard","text","el","document","body","appendChild","select","execCommand","removeChild","Field","_useState","useState","_useState2","slicedToArray","copyMessage","setCopyMessage","setTimeout","Export_templateObject","StyledFieldContainer","Export_templateObject2","Export","kvp","adZone","join","contentCardId","generateKvp","Export_StyledLabel","export_Field","AppContainer","App_templateObject","Container","App_templateObject2","emptyConfig","App","editor_Editor","preview_Preview","export_Export","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.07cd003c.chunk.js","sourcesContent":["type DashboxImage = 'Image';\nexport const DashboxImage: DashboxImage = 'Image';\n\ntype DashboxIcon = 'Icon';\nexport const DashboxIcon: DashboxIcon = 'Icon';\n\nexport type DashboxLayout = DashboxImage | DashboxIcon;\nexport const DashboxLayouts = [DashboxImage, DashboxIcon];\n\nexport const Background: { [key: string]: string } = {\n  CreatorGradient: 'linear-gradient(52deg, #0270e1 20%, #009958 100%)',\n  CreatorBlue: '#0270e1',\n  CreatorGreen: '#009958',\n  ListenerGradient: 'linear-gradient(52deg, #9f34a9 20%, #ff4600 100%)',\n  ListenerPink: '#e8308d',\n  ListenerPurple: '#6a12d2'\n  // EvergreenNeutral: '#f3f3f3'\n};\n\nexport const AdZones: { [key: string]: string } = {\n  stream: 'dashboxStream',\n  listen: 'dashboxListen',\n  notifications: 'dashboxNotifications',\n  tags: 'dashboxTags'\n};\n\nexport type SimpleConfig = {\n  adZones: Array<string>;\n  layout: DashboxLayout;\n  title: string;\n  description: string;\n  background: string;\n  ctaText: string;\n  control: boolean;\n  tcode: string;\n};\n\nexport type ContentCardConfig = SimpleConfig;\n","import styled, { css } from 'styled-components';\nimport { black, platinum, raven } from '../colors';\n\nexport const StyledButton = styled.div`\n  border: 1px solid ${platinum};\n  display: inline-block;\n  padding: 0.5em 1em;\n  cursor: pointer;\n\n  &:hover {\n    border-color: ${raven};\n  }\n`;\n\ntype ButtonProps = {\n  selected: boolean;\n};\nexport const Button = styled(StyledButton)<ButtonProps>`\n  ${(props) =>\n    props.selected &&\n    css`\n      border-color: ${black};\n\n      &:hover {\n        border-color: ${black};\n      }\n    `};\n`;\n","export const raven = '#333333';\nexport const ash = '#999999';\nexport const platinum = '#CCCCCC';\nexport const black = '#000000';\n\nexport const white = '#FFFFFF';\n\nexport const soundcloudOrange = '#FF5500';\nexport const umber = '#CC4400';\n","import React, { ChangeEvent } from 'react';\nimport styled from 'styled-components';\nimport { platinum, raven } from '../colors';\n\nconst StyledInput = styled.input`\n  border: 1px solid ${platinum};\n  display: inline-block;\n  padding: 0.5em;\n  width: 250px;\n  font-size: 0.9em;\n\n  &:focus {\n    outline: none;\n    border: 1px solid ${raven};\n  }\n`;\n\nconst StyledLabel = styled.div`\n  margin-bottom: 0.3em;\n`;\n\ntype InputProps = {\n  label: string;\n  value: string;\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  maxLength?: number;\n};\n\nconst Input: React.FC<InputProps> = ({ label, value, maxLength, onChange }) => {\n  return (\n    <React.Fragment>\n      <label>\n        <StyledLabel>{label}</StyledLabel>\n        <StyledInput\n          type=\"text\"\n          value={value}\n          maxLength={maxLength}\n          onChange={onChange}\n        />\n      </label>\n    </React.Fragment>\n  );\n};\n\nexport default Input;\n","import React, { ChangeEvent } from 'react';\nimport { ContentCardConfig } from '../ContentCardConfig';\nimport Input from './Input';\nimport styled from 'styled-components';\n\nconst StyledInputContainer = styled.div`\n  margin-bottom: 1em;\n`;\n\ntype ConfigSetter = React.Dispatch<React.SetStateAction<ContentCardConfig>>;\ntype EditorProps = {\n  config: ContentCardConfig;\n  setConfig: ConfigSetter;\n};\n\nconst Form: React.FC<EditorProps> = ({ config, setConfig }) => {\n  return (\n    <React.Fragment>\n      <StyledInputContainer>\n        <Input\n          label=\"Title\"\n          value={config.title}\n          onChange={setConfigProp(config, setConfig, 'title')}\n        />\n      </StyledInputContainer>\n\n      <StyledInputContainer>\n        <Input\n          label=\"Description\"\n          value={config.description}\n          onChange={setConfigProp(config, setConfig, 'description')}\n        />\n      </StyledInputContainer>\n\n      <StyledInputContainer>\n        <Input\n          label=\"CTA text\"\n          value={config.ctaText}\n          onChange={setConfigProp(config, setConfig, 'ctaText')}\n        />\n      </StyledInputContainer>\n\n      <StyledInputContainer>\n        <Input\n          label=\"Tcode\"\n          value={config.tcode}\n          onChange={setConfigProp(config, setConfig, 'tcode')}\n        />\n      </StyledInputContainer>\n\n      <StyledInputContainer>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={config.control}\n            onChange={setConfigProp(config, setConfig, 'control', 'checked')}\n          />\n          Control card\n        </label>\n      </StyledInputContainer>\n    </React.Fragment>\n  );\n};\n\nfunction setConfigProp(\n  config: ContentCardConfig,\n  setConfig: ConfigSetter,\n  prop: keyof ContentCardConfig,\n  valueKey?: 'checked' | 'value'\n) {\n  return function(event: ChangeEvent<HTMLInputElement>) {\n    setConfig({\n      ...config,\n      [prop]: valueKey\n        ? event.currentTarget[valueKey]\n        : event.currentTarget.value\n    });\n  };\n}\n\nexport default Form;\n","import React from 'react';\nimport {\n  ContentCardConfig,\n  DashboxLayout,\n  DashboxLayouts,\n  AdZones,\n  Background\n} from '../ContentCardConfig';\nimport { Button } from './Buttons';\nimport Form from './Form';\nimport styled from 'styled-components';\n\nconst ButtonContainer = styled.div`\n  margin-bottom: 1em;\n`;\n\nconst StyledLabel = styled.div`\n  margin-bottom: 0.3em;\n`;\n\ntype LayoutSetter = React.Dispatch<React.SetStateAction<ContentCardConfig>>;\n\ntype EditorProps = {\n  config: ContentCardConfig;\n  setConfig: LayoutSetter;\n};\n\nconst Editor: React.FC<EditorProps> = ({ config, setConfig }) => {\n  return (\n    <div>\n      <h2>Editor</h2>\n      <StyledLabel>Layout</StyledLabel>\n      <ButtonContainer>\n        {DashboxLayouts.map((layout) => (\n          <Button\n            key={layout}\n            selected={layout === config.layout}\n            onClick={setLayout(layout, config, setConfig)}\n          >\n            {layout}\n          </Button>\n        ))}\n      </ButtonContainer>\n\n      <StyledLabel>Background</StyledLabel>\n      <ButtonContainer>\n        {Object.keys(Background).map((key) => {\n          const value = Background[key];\n          return (\n            <Button\n              key={key}\n              selected={value === config.background}\n              onClick={setBackground(value, config, setConfig)}\n            >\n              {key}\n            </Button>\n          );\n        })}\n      </ButtonContainer>\n\n      <StyledLabel>Ad zones</StyledLabel>\n      <ButtonContainer>\n        {Object.keys(AdZones).map((key) => {\n          const value = AdZones[key];\n          return (\n            <Button\n              key={key}\n              selected={config.adZones.indexOf(value) > -1}\n              onClick={setAdZones(value, config, setConfig)}\n            >\n              {key}\n            </Button>\n          );\n        })}\n      </ButtonContainer>\n      <Form config={config} setConfig={setConfig} />\n    </div>\n  );\n};\n\nfunction setLayout(\n  layout: DashboxLayout,\n  config: ContentCardConfig,\n  setConfig: LayoutSetter\n) {\n  return function() {\n    setConfig({\n      ...config,\n      layout\n    });\n  };\n}\n\nfunction setBackground(\n  background: string,\n  config: ContentCardConfig,\n  setConfig: LayoutSetter\n) {\n  return function() {\n    setConfig({\n      ...config,\n      background\n    });\n  };\n}\n\nfunction setAdZones(\n  zone: string,\n  config: ContentCardConfig,\n  setConfig: LayoutSetter\n) {\n  return function() {\n    if (config.adZones.indexOf(zone) > -1) {\n      return setConfig({\n        ...config,\n        adZones: config.adZones.filter((z) => z !== zone)\n      });\n    } else {\n      return setConfig({\n        ...config,\n        adZones: [...config.adZones, zone]\n      });\n    }\n  };\n}\n\nexport default Editor;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { ContentCardConfig, DashboxImage } from '../ContentCardConfig';\n\nconst DashboxWrapper = styled.div`\n  height: 250px;\n  margin: 0 0 25px 0;\n  width: 300px;\n  overflow: hidden;\n`;\n\nconst LinkWrapper = styled.a`\n  background: #c6c6c6;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  justify-content: space-between;\n  opacity: 1;\n  padding: 20px 0 22px;\n  text-align: left;\n  transition: opacity 0.2s linear;\n  text-decoration: none;\n`;\n\nconst ContentWrap = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  flex: 0 0 180px;\n  height: 100%;\n  padding-left: 18px;\n`;\n\nconst TitleLine = styled.h2`\n  color: #ffffff;\n  font-size: 21px;\n  font-weight: 900;\n  line-height: 1.09;\n  text-transform: uppercase;\n  margin: 0;\n\n  // interstate-black\n  font-family: 'Interstate-Black', 'Interstate';\n`;\n\nconst BodyLine = styled.p`\n  color: #ffffff;\n  font-family: Interstate;\n  font-size: 18px;\n  font-weight: 300;\n  line-height: 1.19;\n  margin-bottom: 10px;\n  margin-top: 7px;\n`;\n\nconst Cta = styled.div`\n  align-items: flex-end;\n  display: flex;\n  flex-grow: 1;\n  position: relative;\n  text-align: center;\n`;\n\nconst CtaButton = styled.div`\n  // sc-button\n  display: inline-block;\n  position: relative;\n  margin: 0;\n  border: 1px solid #e5e5e5;\n  border-radius: 3px;\n  cursor: pointer;\n  font-family: 'Interstate', 'Lucida Grande', 'Lucida Sans Unicode',\n    'Lucida Sans', Garuda, Verdana, Tahoma, sans-serif;\n  font-weight: 100;\n  text-align: center;\n  box-sizing: border-box;\n\n  // sc-button-cta\n  background-color: #f50;\n  border-color: #f50;\n  color: #fff;\n\n  // sc-button-large\n  font-size: 16px;\n  line-height: 18px;\n  padding: 10px 15px;\n  height: 40px;\n\n  // sc-truncate\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  word-break: normal;\n`;\n\nconst Side = styled.div`\n  display: flex;\n  flex: 0 0 120px;\n  justify-content: flex-end;\n`;\n\nconst SideImage = styled.img`\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  object-fit: cover;\n  width: 110px;\n`;\n\nconst SideIcon = styled.img`\n  object-fit: contain;\n  margin: auto;\n  width: 48px;\n`;\n\nexport const Template: React.FC<TemplateProps> = ({\n  config: { layout, title, description, background, ctaText }\n}) => {\n  const isImageLayout = layout === DashboxImage;\n  const imgSrc = isImageLayout\n    ? 'https://placekitten.com/110/220'\n    : 'https://placekitten.com/108/110';\n\n  return (\n    <DashboxWrapper>\n      <LinkWrapper href=\"#\" style={{ background }}>\n        <ContentWrap>\n          <div className=\"dashbox__content{{$unless body ' m-centerVertically'}}\">\n            <TitleLine>{title}</TitleLine>\n            <BodyLine>{description}</BodyLine>\n          </div>\n          <Cta>\n            <CtaButton>{ctaText}</CtaButton>\n          </Cta>\n        </ContentWrap>\n        <Side>\n          {isImageLayout ? (\n            <SideImage src={imgSrc} alt=\"\" />\n          ) : (\n            <SideIcon src={imgSrc} alt=\"\" />\n          )}\n        </Side>\n      </LinkWrapper>\n    </DashboxWrapper>\n  );\n};\n\ntype TemplateProps = {\n  config: ContentCardConfig;\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { ContentCardConfig } from '../ContentCardConfig';\nimport { Template } from './Template';\n\ntype PreviewProps = {\n  config: ContentCardConfig;\n};\n\nconst PreviewContainer = styled.div`\n  position: relative;\n  width: 300px;\n  height: 250px;\n`;\n\nexport const ExternalCSS = `\n  <link\n    rel=\"stylesheet\"\n    href=\"https://style.sndcdn.com/css/interstate-9a7e854c95d1b49e3807d5ea457e6e538034dc55.css\"\n  />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://style.sndcdn.com/css/interstate-black-7f3b53f03ea97c0871dc7f62474617224e3aa7e1.css\"\n  />\n`;\n\nconst Preview: React.FC<PreviewProps> = ({ config }) => {\n  return (\n    <div>\n      <h2>Preview</h2>\n      <PreviewContainer>\n        <div dangerouslySetInnerHTML={{ __html: ExternalCSS }} />\n        <Template config={config} />\n      </PreviewContainer>\n    </div>\n  );\n};\n\nexport default Preview;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { platinum, umber } from '../colors';\n\nconst StyledContainer = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledField = styled.input`\n  position: relative;\n  border: 1px solid ${platinum};\n  display: inline-block;\n  padding: 0.5em;\n  width: 150px;\n  font-size: 0.9em;\n  background: #e6e6e6;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:hover {\n    cursor: text;\n  }\n\n  &:after {\n    content: '';\n    background: black;\n    width: 30px;\n    height: 100%;\n    right: 0;\n    position: absolute;\n  }\n`;\n\nconst StyledCopy = styled.span`\n  background: rgba(255, 255, 255, 0.5);\n  height: 100%;\n  padding: 0 1em 0 0.5em;\n\n  &:hover {\n    cursor: pointer;\n    color: ${umber};\n  }\n`;\n\ntype FieldProps = {\n  value: string;\n};\n\nconst Field: React.FC<FieldProps> = ({ value }) => {\n  const [copyMessage, setCopyMessage] = useState('copy');\n  return (\n    <StyledContainer>\n      <StyledField type=\"text\" value={value} onChange={() => {}} />\n      <StyledCopy\n        onClick={() => {\n          copyToClipboard(value);\n          setCopyMessage('copied!');\n          setTimeout(() => {\n            setCopyMessage('copy');\n          }, 1500);\n        }}\n      >\n        {copyMessage}\n      </StyledCopy>\n    </StyledContainer>\n  );\n};\n\nconst copyToClipboard = (text: string): undefined => {\n  const el = document.createElement('textarea');\n  el.value = text;\n  document.body.appendChild(el);\n  el.select();\n  document.execCommand('copy');\n  document.body.removeChild(el);\n  return;\n};\n\nexport default Field;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { ContentCardConfig } from '../ContentCardConfig';\nimport Field from './Field';\nimport generateKvp from './generate-code';\n\nconst StyledLabel = styled.div`\n  margin-bottom: 0.3em;\n`;\n\nconst StyledFieldContainer = styled.div`\n  margin-bottom: 1em;\n`;\n\ntype ExportProps = {\n  config: ContentCardConfig;\n};\n\nconst Export: React.FC<ExportProps> = ({ config }) => {\n  const kvp = generateKvp(config);\n  return (\n    <div>\n      <h2>Export</h2>\n      <StyledLabel>Key value pairs</StyledLabel>\n      {Object.keys(kvp).map((key) => {\n        return (\n          <StyledFieldContainer key={key}>\n            <Field value={key} />\n            <Field value={kvp[key]} />\n          </StyledFieldContainer>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Export;\n","/* eslint-disable no-template-curly-in-string */\nimport { DashboxImage, ContentCardConfig } from '../ContentCardConfig';\n\nexport default function generateKvp(\n  config: ContentCardConfig\n): { [key: string]: string } {\n  return {\n    adZone: config.adZones.join(','),\n    background: config.background,\n    contentCardId: '{{campaign.${api_id}}}',\n    layout: config.layout === DashboxImage ? 'dashbox-image' : 'dashbox-icon',\n    tcode: config.tcode ? config.tcode : '',\n    control: config.control ? 'true' : 'false'\n  };\n}\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  ContentCardConfig,\n  Background,\n  DashboxImage,\n  AdZones\n} from './ContentCardConfig';\nimport Editor from './editor/Editor';\nimport Preview from './preview/Preview';\nimport Export from './export/Export';\n\nconst AppContainer = styled.div`\n  display: flex;\n  padding: 1em 4em;\n  max-width: 1248px;\n\n  @media (max-width: 1200px) {\n    padding: 1em;\n  }\n}`;\n\nconst Container = styled.div`\n  margin-right: 1em;\n  width: 400px;\n`;\n\nconst emptyConfig = {\n  adZones: [AdZones.stream],\n  layout: DashboxImage,\n  title: 'Spotlight your work with Pro',\n  description: 'Feature your best tracks and playlists with a Pro account',\n  background: Background.CreatorGradient,\n  ctaText: 'Try Pro Unlimited',\n  control: false,\n  tcode: 't1234'\n};\n\nconst App: React.FC = () => {\n  const [config, setConfig] = useState<ContentCardConfig>(emptyConfig);\n  return (\n    <AppContainer>\n      <Container>\n        <Editor config={config} setConfig={setConfig} />\n      </Container>\n      <Container>\n        <Preview config={config} />\n      </Container>\n      <Container>\n        <Export config={config} />\n      </Container>\n    </AppContainer>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}